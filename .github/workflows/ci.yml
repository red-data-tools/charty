name: CI

on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - synchronize
    - reopened

jobs:
  test:
    name: ${{ matrix.os }}/${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - ubuntu-18.04
        ruby:
        - "3.0"
        - 2.7
        - 2.6
        include:
        - { os: ubuntu-20.04 , ruby: head }

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - uses: actions/cache@v2
      if: runner.os == 'Linux'
      with:
        path: ~/.cache/red-datasets
        key: ${{ runner.os }}-${{ hashFiles('lib/**') }}
        restore-keys: ${{ runner.os }}-

    - uses: actions/cache@v2
      if: |
        runner.os == 'macOS'
      with:
        path: |
          ~/Library/Caches/red-datasets
        key: ${{ runner.os }}-${{ hashFiles('lib/**') }}
        restore-keys: ${{ runner.os }}-

    - uses: actions/cache@v2
      if: |
        runner.os == 'Windows'
      with:
        path: |
          ~/AppData/red-datasets
        key: ${{ runner.os }}-${{ hashFiles('lib/**') }}
        restore-keys: ${{ runner.os }}-

    - run: sudo apt install build-essential libsqlite3-dev

    - run: bundle install --jobs 4 --retry 3 --without "nmatrix python"

    - run: bundle exec rake

    - run: rake build

    - run: gem install --user pkg/*.gem
